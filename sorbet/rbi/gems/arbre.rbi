# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/arbre/all/arbre.rbi
#
# arbre-1.2.1

module Arbre
end
class Arbre::Element
  def +(element); end
  def <<(child); end
  def add_child(child); end
  def ancestors; end
  def arbre_context; end
  def assigns; end
  def build(*args, &block); end
  def children; end
  def children?; end
  def clear_children!; end
  def content; end
  def content=(contents); end
  def each(&block); end
  def find_by_class(class_name); end
  def find_by_tag(tag_name); end
  def find_first_ancestor(type); end
  def get_elements_by_class_name(class_name); end
  def get_elements_by_tag_name(tag_name); end
  def helpers; end
  def html_safe; end
  def indent_level; end
  def initialize(arbre_context = nil); end
  def inspect; end
  def method_missing(name, *args, &block); end
  def parent; end
  def parent=(parent); end
  def parent?; end
  def remove_child(child); end
  def tag_name; end
  def to_a; end
  def to_ary; end
  def to_s; end
  def to_str; end
  extend Arbre::Element::BuilderMethods::ClassMethods
  include Arbre::Element::BuilderMethods
  include Arbre::Rails::Rendering
end
module Arbre::Element::BuilderMethods
  def a(*args, &block); end
  def abbr(*args, &block); end
  def address(*args, &block); end
  def append_return_block(tag); end
  def appendable_tag?(tag); end
  def area(*args, &block); end
  def article(*args, &block); end
  def aside(*args, &block); end
  def audio(*args, &block); end
  def b(*args, &block); end
  def base(*args, &block); end
  def bdo(*args, &block); end
  def blockquote(*args, &block); end
  def body(*args, &block); end
  def br(*args, &block); end
  def build_tag(klass, *args, &block); end
  def button(*args, &block); end
  def canvas(*args, &block); end
  def caption(*args, &block); end
  def cite(*args, &block); end
  def code(*args, &block); end
  def col(*args, &block); end
  def colgroup(*args, &block); end
  def command(*args, &block); end
  def current_arbre_element; end
  def datalist(*args, &block); end
  def dd(*args, &block); end
  def del(*args, &block); end
  def details(*args, &block); end
  def dfn(*args, &block); end
  def div(*args, &block); end
  def dl(*args, &block); end
  def dt(*args, &block); end
  def em(*args, &block); end
  def embed(*args, &block); end
  def fieldset(*args, &block); end
  def figcaption(*args, &block); end
  def figure(*args, &block); end
  def footer(*args, &block); end
  def form(*args, &block); end
  def form_for(*args, &block); end
  def h1(*args, &block); end
  def h2(*args, &block); end
  def h3(*args, &block); end
  def h4(*args, &block); end
  def h5(*args, &block); end
  def h6(*args, &block); end
  def head(*args, &block); end
  def header(*args, &block); end
  def hgroup(*args, &block); end
  def hr(*args, &block); end
  def html(*args, &block); end
  def i(*args, &block); end
  def iframe(*args, &block); end
  def img(*args, &block); end
  def input(*args, &block); end
  def ins(*args, &block); end
  def insert_tag(klass, *args, &block); end
  def kbd(*args, &block); end
  def keygen(*args, &block); end
  def label(*args, &block); end
  def legend(*args, &block); end
  def li(*args, &block); end
  def link(*args, &block); end
  def map(*args, &block); end
  def mark(*args, &block); end
  def menu(*args, &block); end
  def menuitem(*args, &block); end
  def meta(*args, &block); end
  def meter(*args, &block); end
  def nav(*args, &block); end
  def noscript(*args, &block); end
  def object(*args, &block); end
  def ol(*args, &block); end
  def optgroup(*args, &block); end
  def option(*args, &block); end
  def output(*args, &block); end
  def para(*args, &block); end
  def param(*args, &block); end
  def pre(*args, &block); end
  def progress(*args, &block); end
  def q(*args, &block); end
  def s(*args, &block); end
  def samp(*args, &block); end
  def script(*args, &block); end
  def section(*args, &block); end
  def select(*args, &block); end
  def self.included(klass); end
  def small(*args, &block); end
  def source(*args, &block); end
  def span(*args, &block); end
  def strong(*args, &block); end
  def style(*args, &block); end
  def sub(*args, &block); end
  def summary(*args, &block); end
  def sup(*args, &block); end
  def svg(*args, &block); end
  def table(*args, &block); end
  def tbody(*args, &block); end
  def td(*args, &block); end
  def text_node(*args, &block); end
  def textarea(*args, &block); end
  def tfoot(*args, &block); end
  def th(*args, &block); end
  def thead(*args, &block); end
  def time(*args, &block); end
  def title(*args, &block); end
  def tr(*args, &block); end
  def track(*args, &block); end
  def ul(*args, &block); end
  def var(*args, &block); end
  def video(*args, &block); end
  def wbr(*args, &block); end
  def with_current_arbre_element(tag, &block); end
  def within(tag, &block); end
end
module Arbre::Element::BuilderMethods::ClassMethods
  def builder_method(method_name); end
end
class Arbre::Element::Proxy < BasicObject
  def initialize(element); end
  def method_missing(method, *args, &block); end
  def respond_to?(method, include_all = nil); end
end
class Arbre::ElementCollection < Array
  def &(other); end
  def +(other); end
  def -(other); end
  def to_s; end
end
class Arbre::Context < Arbre::Element
  def arbre_context; end
  def assigns; end
  def bytesize; end
  def cached_html; end
  def current_arbre_element; end
  def helpers; end
  def indent_level; end
  def initialize(assigns = nil, helpers = nil, &block); end
  def length; end
  def method_missing(method, *args, &block); end
  def respond_to_missing?(method, include_all); end
  def with_current_arbre_element(tag); end
  def within(tag); end
end
module Arbre::HTML
end
class Arbre::HTML::Attributes < Hash
  def any?; end
  def html_escape(s); end
  def to_s; end
  def value_empty?(value); end
end
class Arbre::HTML::ClassList < Set
  def <<(class_names); end
  def add(class_names); end
  def self.build_from_string(class_names); end
  def to_s; end
end
class Arbre::HTML::Tag < Arbre::Element
  def add_class(class_names); end
  def attr(name); end
  def attributes; end
  def attributes_html; end
  def build(*args); end
  def child_is_text?; end
  def class_list; end
  def class_names; end
  def closing_tag; end
  def default_id_for_prefix; end
  def dom_class_name_for(record); end
  def dom_id_for(record); end
  def extract_arguments(args); end
  def get_attribute(name); end
  def has_attribute?(name); end
  def id!; end
  def id; end
  def id=(id); end
  def indent(open_tag, child_content, close_tag); end
  def initialize(*arg0); end
  def no_child?; end
  def opening_tag; end
  def remove_attribute(name); end
  def remove_class(class_names); end
  def self_closing_tag?; end
  def set_attribute(name, value); end
  def set_for_attribute(record); end
  def to_s; end
end
class Arbre::HTML::TextNode < Arbre::Element
  def add_child(*args); end
  def build(string); end
  def class_list; end
  def self.from_string(string); end
  def tag_name; end
  def to_s; end
end
class Arbre::HTML::Document < Arbre::HTML::Tag
  def build(*args); end
  def build_body; end
  def build_head; end
  def doctype; end
  def document; end
  def tag_name; end
  def to_s; end
end
class Arbre::HTML::A < Arbre::HTML::Tag
end
class Arbre::HTML::Abbr < Arbre::HTML::Tag
end
class Arbre::HTML::Address < Arbre::HTML::Tag
end
class Arbre::HTML::Area < Arbre::HTML::Tag
end
class Arbre::HTML::Article < Arbre::HTML::Tag
end
class Arbre::HTML::Aside < Arbre::HTML::Tag
end
class Arbre::HTML::Audio < Arbre::HTML::Tag
end
class Arbre::HTML::B < Arbre::HTML::Tag
end
class Arbre::HTML::Base < Arbre::HTML::Tag
end
class Arbre::HTML::Bdo < Arbre::HTML::Tag
end
class Arbre::HTML::Blockquote < Arbre::HTML::Tag
end
class Arbre::HTML::Body < Arbre::HTML::Tag
end
class Arbre::HTML::Br < Arbre::HTML::Tag
end
class Arbre::HTML::Button < Arbre::HTML::Tag
end
class Arbre::HTML::Canvas < Arbre::HTML::Tag
end
class Arbre::HTML::Caption < Arbre::HTML::Tag
end
class Arbre::HTML::Cite < Arbre::HTML::Tag
end
class Arbre::HTML::Code < Arbre::HTML::Tag
end
class Arbre::HTML::Col < Arbre::HTML::Tag
end
class Arbre::HTML::Colgroup < Arbre::HTML::Tag
end
class Arbre::HTML::Command < Arbre::HTML::Tag
end
class Arbre::HTML::Datalist < Arbre::HTML::Tag
end
class Arbre::HTML::Dd < Arbre::HTML::Tag
end
class Arbre::HTML::Del < Arbre::HTML::Tag
end
class Arbre::HTML::Details < Arbre::HTML::Tag
end
class Arbre::HTML::Dfn < Arbre::HTML::Tag
end
class Arbre::HTML::Div < Arbre::HTML::Tag
end
class Arbre::HTML::Dl < Arbre::HTML::Tag
end
class Arbre::HTML::Dt < Arbre::HTML::Tag
end
class Arbre::HTML::Em < Arbre::HTML::Tag
end
class Arbre::HTML::Embed < Arbre::HTML::Tag
end
class Arbre::HTML::Fieldset < Arbre::HTML::Tag
end
class Arbre::HTML::Figcaption < Arbre::HTML::Tag
end
class Arbre::HTML::Figure < Arbre::HTML::Tag
end
class Arbre::HTML::Footer < Arbre::HTML::Tag
end
class Arbre::HTML::Form < Arbre::HTML::Tag
end
class Arbre::HTML::H1 < Arbre::HTML::Tag
end
class Arbre::HTML::H2 < Arbre::HTML::Tag
end
class Arbre::HTML::H3 < Arbre::HTML::Tag
end
class Arbre::HTML::H4 < Arbre::HTML::Tag
end
class Arbre::HTML::H5 < Arbre::HTML::Tag
end
class Arbre::HTML::H6 < Arbre::HTML::Tag
end
class Arbre::HTML::Head < Arbre::HTML::Tag
end
class Arbre::HTML::Header < Arbre::HTML::Tag
end
class Arbre::HTML::Hgroup < Arbre::HTML::Tag
end
class Arbre::HTML::Hr < Arbre::HTML::Tag
end
class Arbre::HTML::Html < Arbre::HTML::Tag
end
class Arbre::HTML::I < Arbre::HTML::Tag
end
class Arbre::HTML::Iframe < Arbre::HTML::Tag
end
class Arbre::HTML::Img < Arbre::HTML::Tag
end
class Arbre::HTML::Input < Arbre::HTML::Tag
end
class Arbre::HTML::Ins < Arbre::HTML::Tag
end
class Arbre::HTML::Keygen < Arbre::HTML::Tag
end
class Arbre::HTML::Kbd < Arbre::HTML::Tag
end
class Arbre::HTML::Label < Arbre::HTML::Tag
end
class Arbre::HTML::Legend < Arbre::HTML::Tag
end
class Arbre::HTML::Li < Arbre::HTML::Tag
end
class Arbre::HTML::Link < Arbre::HTML::Tag
end
class Arbre::HTML::Map < Arbre::HTML::Tag
end
class Arbre::HTML::Mark < Arbre::HTML::Tag
end
class Arbre::HTML::Menu < Arbre::HTML::Tag
end
class Arbre::HTML::Menuitem < Arbre::HTML::Tag
end
class Arbre::HTML::Meta < Arbre::HTML::Tag
end
class Arbre::HTML::Meter < Arbre::HTML::Tag
end
class Arbre::HTML::Nav < Arbre::HTML::Tag
end
class Arbre::HTML::Noscript < Arbre::HTML::Tag
end
class Arbre::HTML::Object < Arbre::HTML::Tag
end
class Arbre::HTML::Ol < Arbre::HTML::Tag
end
class Arbre::HTML::Optgroup < Arbre::HTML::Tag
end
class Arbre::HTML::Option < Arbre::HTML::Tag
end
class Arbre::HTML::Output < Arbre::HTML::Tag
end
class Arbre::HTML::Param < Arbre::HTML::Tag
end
class Arbre::HTML::Pre < Arbre::HTML::Tag
end
class Arbre::HTML::Progress < Arbre::HTML::Tag
end
class Arbre::HTML::Q < Arbre::HTML::Tag
end
class Arbre::HTML::S < Arbre::HTML::Tag
end
class Arbre::HTML::Samp < Arbre::HTML::Tag
end
class Arbre::HTML::Script < Arbre::HTML::Tag
end
class Arbre::HTML::Section < Arbre::HTML::Tag
end
class Arbre::HTML::Select < Arbre::HTML::Tag
end
class Arbre::HTML::Small < Arbre::HTML::Tag
end
class Arbre::HTML::Source < Arbre::HTML::Tag
end
class Arbre::HTML::Span < Arbre::HTML::Tag
end
class Arbre::HTML::Strong < Arbre::HTML::Tag
end
class Arbre::HTML::Style < Arbre::HTML::Tag
end
class Arbre::HTML::Sub < Arbre::HTML::Tag
end
class Arbre::HTML::Summary < Arbre::HTML::Tag
end
class Arbre::HTML::Sup < Arbre::HTML::Tag
end
class Arbre::HTML::Svg < Arbre::HTML::Tag
end
class Arbre::HTML::Table < Arbre::HTML::Tag
  def initialize(*arg0); end
  def set_table_tag_defaults; end
end
class Arbre::HTML::Tbody < Arbre::HTML::Tag
end
class Arbre::HTML::Td < Arbre::HTML::Tag
end
class Arbre::HTML::Textarea < Arbre::HTML::Tag
end
class Arbre::HTML::Tfoot < Arbre::HTML::Tag
end
class Arbre::HTML::Th < Arbre::HTML::Tag
end
class Arbre::HTML::Thead < Arbre::HTML::Tag
end
class Arbre::HTML::Time < Arbre::HTML::Tag
end
class Arbre::HTML::Title < Arbre::HTML::Tag
end
class Arbre::HTML::Tr < Arbre::HTML::Tag
end
class Arbre::HTML::Track < Arbre::HTML::Tag
end
class Arbre::HTML::Ul < Arbre::HTML::Tag
end
class Arbre::HTML::Var < Arbre::HTML::Tag
end
class Arbre::HTML::Video < Arbre::HTML::Tag
end
class Arbre::HTML::Wbr < Arbre::HTML::Tag
end
class Arbre::HTML::P < Arbre::HTML::Tag
end
class Arbre::Component < Arbre::HTML::Div
  def default_class_name; end
  def initialize(*arg0); end
  def tag_name; end
end
module Arbre::Rails
end
class Arbre::Rails::TemplateHandler
  def call(template, source = nil); end
end
module Arbre::Rails::Forms
end
class Arbre::Rails::Forms::FormBuilderProxy < Arbre::Component
  def form_builder; end
  def label(*args); end
  def method_missing(method, *args, &block); end
  def proxy_call_to_form(method, *args, &block); end
  def respond_to_missing?(method, include_all); end
  def select(*args); end
end
class Arbre::Rails::Forms::FormForProxy < Arbre::Rails::Forms::FormBuilderProxy
  def build(resource, form_options = nil, &block); end
  def closing_tag; end
  def fields_for(*args, &block); end
  def opening_tag; end
  def split_string_on(string, match); end
end
class Arbre::Rails::Forms::FieldsForProxy < Arbre::Rails::Forms::FormBuilderProxy
  def build(form_builder, *args, &block); end
  def to_s; end
end
module Arbre::Rails::Rendering
  def render(*args); end
end
