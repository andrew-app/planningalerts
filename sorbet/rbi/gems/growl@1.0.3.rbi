# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `growl` gem.
# Please instead update this file by running `tapioca generate`.

# typed: true

module Growl

  private

  def notify(message = T.unsafe(nil), options = T.unsafe(nil), &block); end
  def notify_error(message, *args); end
  def notify_info(message, *args); end
  def notify_ok(message, *args); end
  def notify_warning(message, *args); end

  class << self
    def exec(*args); end
    def installed?; end
    def new(*args, &block); end
    def normalize_icon!(options = T.unsafe(nil)); end
    def notify(message = T.unsafe(nil), options = T.unsafe(nil), &block); end
    def notify_error(message, *args); end
    def notify_info(message, *args); end
    def notify_ok(message, *args); end
    def notify_warning(message, *args); end
    def version; end
  end
end

Growl::BIN = T.let(T.unsafe(nil), String)

class Growl::Base
  def initialize(options = T.unsafe(nil), &block); end

  def appIcon; end
  def appIcon!; end
  def appIcon=(_arg0); end
  def appIcon?; end
  def args; end
  def auth; end
  def auth!; end
  def auth=(_arg0); end
  def auth?; end
  def crypt; end
  def crypt!; end
  def crypt=(_arg0); end
  def crypt?; end
  def host; end
  def host!; end
  def host=(_arg0); end
  def host?; end
  def icon; end
  def icon!; end
  def icon=(_arg0); end
  def icon?; end
  def iconpath; end
  def iconpath!; end
  def iconpath=(_arg0); end
  def iconpath?; end
  def identifier; end
  def identifier!; end
  def identifier=(_arg0); end
  def identifier?; end
  def image; end
  def image!; end
  def image=(_arg0); end
  def image?; end
  def message; end
  def message!; end
  def message=(_arg0); end
  def message?; end
  def name; end
  def name!; end
  def name=(_arg0); end
  def name?; end
  def password; end
  def password!; end
  def password=(_arg0); end
  def password?; end
  def port; end
  def port!; end
  def port=(_arg0); end
  def port?; end
  def priority; end
  def priority!; end
  def priority=(_arg0); end
  def priority?; end
  def run; end
  def sticky; end
  def sticky!; end
  def sticky=(_arg0); end
  def sticky?; end
  def title; end
  def title!; end
  def title=(_arg0); end
  def title?; end
  def udp; end
  def udp!; end
  def udp=(_arg0); end
  def udp?; end

  class << self
    def switch(name); end
    def switches; end
  end
end

class Growl::Error < ::StandardError
end

Growl::VERSION = T.let(T.unsafe(nil), String)
