require:
  - rubocop-rails
  - rubocop-sorbet

AllCops:
  TargetRailsVersion: 5.0
  Exclude:
      - 'db/migrate/*'
      - 'db/schema.rb'
      - config/*
      - config/initializers/*
      - config/environments/*
      - bin/*
      - vendor/**/*

# Disabling warnings about line length because it's so common through
# the codebase currently. It would be good to fix as it would make things
# easier to read but it would take a bit of time to do.
# TODO: Enable this again
Layout/LineLength:
  Enabled: false

# We prefer double quotes here and it we're making liberal use of multi-line
# strings so it makes sense to enforce those to be consistent oo
Style/StringLiterals:
  EnforcedStyle: double_quotes
  ConsistentQuotesInMultiline: true

# This one I disagree with. Putting seperators in large numbers makes sense
# in some circumstances but in others (an example id in a database table)
# it's just nonsensical. Also, I think this one might also be a bit US centric.
Style/NumericLiterals:
  Enabled: false

# For Rails it feels a little overkill to have to write a description for
# each class because so much is naming conventions. So, disabling this
Style/Documentation:
  Enabled: false

# Disable a bunch of metrics to do with code complexity. These as are all
# a bit hard-nosed. Maybe after we've done a pass with Code Climate we
# can revisit these
Metrics/AbcSize:
  Enabled: false

Metrics/BlockLength:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Metrics/MethodLength:
  Enabled: false

Metrics/ModuleLength:
  Enabled: false

Metrics/ParameterLists:
  Enabled: false

Metrics/PerceivedComplexity:
  Enabled: false

Layout/EmptyLinesAroundAttributeAccessor:
  Enabled: true

Layout/SpaceAroundMethodCallOperator:
  Enabled: true

Lint/RaiseException:
  Enabled: true

Lint/StructNewOverride:
  Enabled: true

Style/ExponentialNotation:
  Enabled: true

Style/HashEachMethods:
  Enabled: true

Style/HashTransformKeys:
  Enabled: true

Style/HashTransformValues:
  Enabled: true

Style/SlicingWithRange:
  Enabled: true

Lint/DeprecatedOpenSSLConstant:
  Enabled: true

Lint/MixedRegexpCaptureTypes:
  Enabled: true

# To use method signature in sorbet with accessors we need to separate them
# So, disabling this
Style/AccessorGrouping:
  Enabled: false

Style/BisectedAttrAccessor:
  Enabled: true

Style/RedundantAssignment:
  Enabled: true

Style/RedundantFetchBlock:
  Enabled: true

Style/RedundantRegexpCharacterClass:
  Enabled: true

Style/RedundantRegexpEscape:
  Enabled: true

# Sorbet

Sorbet/FalseSigil:
  Exclude:
    - spec/**/*.rb
    - db/seeds.rb
    - lib/tasks/*.rake
    - config.ru

Sorbet/TrueSigil:
  Enabled: true
  Exclude:
    - spec/**/*.rb
    - db/seeds.rb
    - lib/tasks/*.rake
    - config.ru
    - Capfile
    - Gemfile
    - Guardfile
    - Rakefile
    - app/themes/standard/views/comments/index.js.rabl
    - app/themes/standard/views/comments/index.rss.builder
    - experiments/metrics/alert_signup.rb
    # TODO: Remove these exclusions as soon as we can
    - app/admin/*.rb
    - app/controllers/councillor_contributions_controller.rb

Sorbet/StrictSigil:
  Enabled: true
  Exclude:
    - spec/**/*.rb
    - db/seeds.rb
    - lib/tasks/*.rake
    - config.ru
    - Capfile
    - Gemfile
    - Guardfile
    - Rakefile
    - app/themes/standard/views/comments/index.js.rabl
    - app/themes/standard/views/comments/index.rss.builder
    - experiments/metrics/alert_signup.rb
    # TODO: Remove these exclusions as soon as we can
    - app/models/concerns/email_confirmable.rb
    - app/models/councillor_contribution.rb
    - app/models/feed.rb
    - app/models/sitemap.rb
    - app/admin/*.rb
    - app/controllers/**/*.rb
    - app/forms/*.rb
