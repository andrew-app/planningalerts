# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/growl/all/growl.rbi
#
# growl-1.0.3

module Growl
  def notify(message = nil, options = nil, &block); end
  def notify_error(message, *args); end
  def notify_info(message, *args); end
  def notify_ok(message, *args); end
  def notify_warning(message, *args); end
  def self.exec(*args); end
  def self.installed?; end
  def self.new(*args, &block); end
  def self.normalize_icon!(options = nil); end
  def self.notify(message = nil, options = nil, &block); end
  def self.notify_error(message, *args); end
  def self.notify_info(message, *args); end
  def self.notify_ok(message, *args); end
  def self.notify_warning(message, *args); end
  def self.version; end
end
class Growl::Error < StandardError
end
class Growl::Base
  def appIcon!; end
  def appIcon; end
  def appIcon=(arg0); end
  def appIcon?; end
  def args; end
  def auth!; end
  def auth; end
  def auth=(arg0); end
  def auth?; end
  def crypt!; end
  def crypt; end
  def crypt=(arg0); end
  def crypt?; end
  def host!; end
  def host; end
  def host=(arg0); end
  def host?; end
  def icon!; end
  def icon; end
  def icon=(arg0); end
  def icon?; end
  def iconpath!; end
  def iconpath; end
  def iconpath=(arg0); end
  def iconpath?; end
  def identifier!; end
  def identifier; end
  def identifier=(arg0); end
  def identifier?; end
  def image!; end
  def image; end
  def image=(arg0); end
  def image?; end
  def initialize(options = nil, &block); end
  def message!; end
  def message; end
  def message=(arg0); end
  def message?; end
  def name!; end
  def name; end
  def name=(arg0); end
  def name?; end
  def password!; end
  def password; end
  def password=(arg0); end
  def password?; end
  def port!; end
  def port; end
  def port=(arg0); end
  def port?; end
  def priority!; end
  def priority; end
  def priority=(arg0); end
  def priority?; end
  def run; end
  def self.switch(name); end
  def self.switches; end
  def sticky!; end
  def sticky; end
  def sticky=(arg0); end
  def sticky?; end
  def title!; end
  def title; end
  def title=(arg0); end
  def title?; end
  def udp!; end
  def udp; end
  def udp=(arg0); end
  def udp?; end
end
