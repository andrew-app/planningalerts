# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `bootstrap_form` gem.
# Please instead update this file by running `tapioca generate`.

# typed: true

module BootstrapForm
  extend(::ActiveSupport::Autoload)

  def field_error_proc; end
  def field_error_proc=(val); end

  class << self
    def config; end
    def configure; end
    def eager_load!; end
    def field_error_proc; end
    def field_error_proc=(val); end
  end
end

module BootstrapForm::ActionViewExtensions
end

module BootstrapForm::ActionViewExtensions::FormHelper
  def bootstrap_form_for(record, options = T.unsafe(nil), &block); end
  def bootstrap_form_tag(options = T.unsafe(nil), &block); end
  def bootstrap_form_with(options = T.unsafe(nil), &block); end

  private

  def with_bootstrap_form_field_error_proc; end
end

module BootstrapForm::Components
  include(::BootstrapForm::Components::Hints)
  include(::BootstrapForm::Components::Labels)
  include(::BootstrapForm::Components::Layout)
  include(::BootstrapForm::Components::Validation)
  extend(::ActiveSupport::Autoload)
end

module BootstrapForm::Components::Hints
  extend(::ActiveSupport::Concern)


  private

  def generate_help(name, help_text); end
  def get_help_text_by_i18n_key(name); end
  def scoped_help_text(name, partial_scope); end
  def translated_help_text(name, scope); end
end

module BootstrapForm::Components::Labels
  extend(::ActiveSupport::Concern)


  private

  def generate_label(id, name, options, custom_label_col, group_layout); end
  def label_classes(name, options, custom_label_col, group_layout); end
  def label_layout_classes(custom_label_col, group_layout); end
  def label_text(name, options); end
end

module BootstrapForm::Components::Layout
  extend(::ActiveSupport::Concern)


  private

  def field_inline_override?(field_layout = T.unsafe(nil)); end
  def get_group_layout(group_layout); end
  def layout_default?(field_layout = T.unsafe(nil)); end
  def layout_horizontal?(field_layout = T.unsafe(nil)); end
  def layout_in_effect(field_layout); end
  def layout_inline?(field_layout = T.unsafe(nil)); end
end

module BootstrapForm::Components::Validation
  extend(::ActiveSupport::Concern)


  private

  def error?(name); end
  def generate_error(name); end
  def get_error_messages(name); end
  def inline_error?(name); end
  def presence_validator?(target_validators); end
  def required_attribute?(obj, attribute); end
end

class BootstrapForm::Configuration
  def default_form_attributes; end
  def default_form_attributes=(attributes); end
end

class BootstrapForm::Engine < ::Rails::Engine
end

class BootstrapForm::FormBuilder < ::ActionView::Helpers::FormBuilder
  include(::BootstrapForm::Helpers::Bootstrap)
  include(::BootstrapForm::FormGroupBuilder)
  include(::BootstrapForm::FormGroup)
  include(::BootstrapForm::Components::Hints)
  include(::BootstrapForm::Components::Labels)
  include(::BootstrapForm::Components::Layout)
  include(::BootstrapForm::Components::Validation)
  include(::BootstrapForm::Components)
  include(::BootstrapForm::Inputs::Base)
  include(::BootstrapForm::Inputs::CheckBox)
  include(::BootstrapForm::Inputs::InputsCollection)
  include(::BootstrapForm::Inputs::CollectionCheckBoxes)
  include(::BootstrapForm::Inputs::CollectionRadioButtons)
  include(::BootstrapForm::Inputs::CollectionSelect)
  include(::BootstrapForm::Inputs::ColorField)
  include(::BootstrapForm::Inputs::DateField)
  include(::BootstrapForm::Inputs::DateSelect)
  include(::BootstrapForm::Inputs::DatetimeField)
  include(::BootstrapForm::Inputs::DatetimeLocalField)
  include(::BootstrapForm::Inputs::DatetimeSelect)
  include(::BootstrapForm::Inputs::EmailField)
  include(::BootstrapForm::Inputs::FileField)
  include(::BootstrapForm::Inputs::GroupedCollectionSelect)
  include(::BootstrapForm::Inputs::MonthField)
  include(::BootstrapForm::Inputs::NumberField)
  include(::BootstrapForm::Inputs::PasswordField)
  include(::BootstrapForm::Inputs::PhoneField)
  include(::BootstrapForm::Inputs::RadioButton)
  include(::BootstrapForm::Inputs::RangeField)
  include(::BootstrapForm::Inputs::RichTextArea)
  include(::BootstrapForm::Inputs::SearchField)
  include(::BootstrapForm::Inputs::Select)
  include(::BootstrapForm::Inputs::TelephoneField)
  include(::BootstrapForm::Inputs::TextArea)
  include(::BootstrapForm::Inputs::TextField)
  include(::BootstrapForm::Inputs::TimeField)
  include(::BootstrapForm::Inputs::TimeSelect)
  include(::BootstrapForm::Inputs::TimeZoneSelect)
  include(::BootstrapForm::Inputs::UrlField)
  include(::BootstrapForm::Inputs::WeekField)
  extend(::BootstrapForm::Inputs::Base::ClassMethods)

  def initialize(object_name, object, template, options); end

  def acts_like_form_tag; end
  def add_default_form_attributes_and_form_inline(options); end
  def capture(*args, &block); end
  def check_box(name, options = T.unsafe(nil), checked_value = T.unsafe(nil), unchecked_value = T.unsafe(nil), &block); end
  def check_box_with_bootstrap(name, options = T.unsafe(nil), checked_value = T.unsafe(nil), unchecked_value = T.unsafe(nil), &block); end
  def check_box_without_bootstrap(method, options = T.unsafe(nil), checked_value = T.unsafe(nil), unchecked_value = T.unsafe(nil)); end
  def collection_check_boxes(*args); end
  def collection_check_boxes_with_bootstrap(*args); end
  def collection_check_boxes_without_bootstrap(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end
  def collection_radio_buttons(*args); end
  def collection_radio_buttons_with_bootstrap(*args); end
  def collection_radio_buttons_without_bootstrap(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end
  def collection_select(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def collection_select_with_bootstrap(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def collection_select_without_bootstrap(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def color_field(name, options = T.unsafe(nil)); end
  def color_field_with_bootstrap(name, options = T.unsafe(nil)); end
  def color_field_without_bootstrap(method, options = T.unsafe(nil)); end
  def concat(*args, &block); end
  def content_tag(*args, &block); end
  def control_col; end
  def date_field(name, options = T.unsafe(nil)); end
  def date_field_with_bootstrap(name, options = T.unsafe(nil)); end
  def date_field_without_bootstrap(method, options = T.unsafe(nil)); end
  def date_select(name, options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def date_select_with_bootstrap(name, options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def date_select_without_bootstrap(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def datetime_field(name, options = T.unsafe(nil)); end
  def datetime_field_with_bootstrap(name, options = T.unsafe(nil)); end
  def datetime_field_without_bootstrap(method, options = T.unsafe(nil)); end
  def datetime_local_field(name, options = T.unsafe(nil)); end
  def datetime_local_field_with_bootstrap(name, options = T.unsafe(nil)); end
  def datetime_local_field_without_bootstrap(method, options = T.unsafe(nil)); end
  def datetime_select(name, options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def datetime_select_with_bootstrap(name, options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def datetime_select_without_bootstrap(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def email_field(name, options = T.unsafe(nil)); end
  def email_field_with_bootstrap(name, options = T.unsafe(nil)); end
  def email_field_without_bootstrap(method, options = T.unsafe(nil)); end
  def fields_for(record_name, record_object = T.unsafe(nil), fields_options = T.unsafe(nil), &block); end
  def fields_for_with_bootstrap(record_name, record_object = T.unsafe(nil), fields_options = T.unsafe(nil), &block); end
  def fields_for_without_bootstrap(record_name, record_object = T.unsafe(nil), fields_options = T.unsafe(nil), &block); end
  def file_field(name, options = T.unsafe(nil)); end
  def file_field_with_bootstrap(name, options = T.unsafe(nil)); end
  def file_field_without_bootstrap(method, options = T.unsafe(nil)); end
  def grouped_collection_select(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def grouped_collection_select_with_bootstrap(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def grouped_collection_select_without_bootstrap(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def has_error; end
  def inline_errors; end
  def label_col; end
  def label_errors; end
  def layout; end
  def month_field(name, options = T.unsafe(nil)); end
  def month_field_with_bootstrap(name, options = T.unsafe(nil)); end
  def month_field_without_bootstrap(method, options = T.unsafe(nil)); end
  def number_field(name, options = T.unsafe(nil)); end
  def number_field_with_bootstrap(name, options = T.unsafe(nil)); end
  def number_field_without_bootstrap(method, options = T.unsafe(nil)); end
  def password_field(name, options = T.unsafe(nil)); end
  def password_field_with_bootstrap(name, options = T.unsafe(nil)); end
  def password_field_without_bootstrap(method, options = T.unsafe(nil)); end
  def phone_field(name, options = T.unsafe(nil)); end
  def phone_field_with_bootstrap(name, options = T.unsafe(nil)); end
  def phone_field_without_bootstrap(method, options = T.unsafe(nil)); end
  def radio_button(name, value, *args); end
  def radio_button_with_bootstrap(name, value, *args); end
  def radio_button_without_bootstrap(method, tag_value, options = T.unsafe(nil)); end
  def range_field(name, options = T.unsafe(nil)); end
  def range_field_with_bootstrap(name, options = T.unsafe(nil)); end
  def range_field_without_bootstrap(method, options = T.unsafe(nil)); end
  def rich_text_area(name, options = T.unsafe(nil)); end
  def rich_text_area_with_bootstrap(name, options = T.unsafe(nil)); end
  def rich_text_area_without_bootstrap(method, options = T.unsafe(nil)); end
  def search_field(name, options = T.unsafe(nil)); end
  def search_field_with_bootstrap(name, options = T.unsafe(nil)); end
  def search_field_without_bootstrap(method, options = T.unsafe(nil)); end
  def select(method, choices = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end
  def select_with_bootstrap(method, choices = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end
  def select_without_bootstrap(method, choices = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end
  def telephone_field(name, options = T.unsafe(nil)); end
  def telephone_field_with_bootstrap(name, options = T.unsafe(nil)); end
  def telephone_field_without_bootstrap(method, options = T.unsafe(nil)); end
  def text_area(name, options = T.unsafe(nil)); end
  def text_area_with_bootstrap(name, options = T.unsafe(nil)); end
  def text_area_without_bootstrap(method, options = T.unsafe(nil)); end
  def text_field(name, options = T.unsafe(nil)); end
  def text_field_with_bootstrap(name, options = T.unsafe(nil)); end
  def text_field_without_bootstrap(method, options = T.unsafe(nil)); end
  def time_field(name, options = T.unsafe(nil)); end
  def time_field_with_bootstrap(name, options = T.unsafe(nil)); end
  def time_field_without_bootstrap(method, options = T.unsafe(nil)); end
  def time_select(name, options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def time_select_with_bootstrap(name, options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def time_select_without_bootstrap(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def time_zone_select(method, priority_zones = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def time_zone_select_with_bootstrap(method, priority_zones = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def time_zone_select_without_bootstrap(method, priority_zones = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end
  def url_field(name, options = T.unsafe(nil)); end
  def url_field_with_bootstrap(name, options = T.unsafe(nil)); end
  def url_field_without_bootstrap(method, options = T.unsafe(nil)); end
  def week_field(name, options = T.unsafe(nil)); end
  def week_field_with_bootstrap(name, options = T.unsafe(nil)); end
  def week_field_without_bootstrap(method, options = T.unsafe(nil)); end

  private

  def control_class; end
  def control_specific_class(method); end
  def default_control_col; end
  def default_label_col; end
  def default_layout; end
  def feedback_class; end
  def fields_for_options(record_object, fields_options); end
  def hide_class; end
  def offset_col(label_col); end
end

module BootstrapForm::FormGroup
  extend(::ActiveSupport::Concern)

  def form_group(*args, &block); end

  private

  def form_group_classes(options); end
  def form_group_content(label, help_text, options, &block); end
  def form_group_content_tag(name, field_name, without_field_name, options, html_options); end
  def form_group_control_class(options); end
  def group_layout_horizontal?(layout); end
end

module BootstrapForm::FormGroupBuilder
  extend(::ActiveSupport::Concern)


  private

  def convert_form_tag_options(method, options = T.unsafe(nil)); end
  def form_group_builder(method, options, html_options = T.unsafe(nil)); end
  def form_group_builder_options(options, method); end
  def form_group_css_options(method, html_options, options); end
  def form_group_label(options, css_options); end
  def form_group_label_class(options); end
  def form_group_label_text(label); end
  def form_group_opts(options, css_options); end
  def form_group_placeholder(options, method); end
  def form_group_required(options); end
end

module BootstrapForm::Helpers
  extend(::ActiveSupport::Autoload)
end

module BootstrapForm::Helpers::Bootstrap
  def alert_message(title, options = T.unsafe(nil)); end
  def button(value = T.unsafe(nil), options = T.unsafe(nil), &block); end
  def custom_control(*args, &block); end
  def error_summary; end
  def errors_on(name, options = T.unsafe(nil)); end
  def input_group_content(content); end
  def input_with_error(name, &block); end
  def prepend_and_append_input(name, options, &block); end
  def primary(name = T.unsafe(nil), options = T.unsafe(nil), &block); end
  def static_class; end
  def static_control(*args); end
  def submit(name = T.unsafe(nil), options = T.unsafe(nil)); end

  private

  def attach_input(options, key); end
  def setup_css_class(the_class, options = T.unsafe(nil)); end
end

module BootstrapForm::Inputs
  extend(::ActiveSupport::Autoload)
end

module BootstrapForm::Inputs::Base
  extend(::ActiveSupport::Concern)

  mixes_in_class_methods(::BootstrapForm::Inputs::Base::ClassMethods)
end

module BootstrapForm::Inputs::Base::ClassMethods
  def bootstrap_alias(field_name); end
  def bootstrap_field(field_name); end
  def bootstrap_select_group(field_name); end
end

module BootstrapForm::Inputs::CheckBox
  extend(::ActiveSupport::Concern)


  private

  def check_box_classes(name, options); end
  def check_box_description(name, options, &block); end
  def check_box_label(name, options, checked_value, &block); end
  def check_box_label_class(options); end
  def check_box_value(name, value); end
  def check_box_wrapper_class(options); end
  def custom_check_box_wrapper_class(options); end
end

module BootstrapForm::Inputs::CollectionCheckBoxes
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::CollectionRadioButtons
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::CollectionSelect
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::ColorField
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::DateField
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::DateSelect
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::DatetimeField
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::DatetimeLocalField
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::DatetimeSelect
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::EmailField
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::FileField
  extend(::ActiveSupport::Concern)


  private

  def file_field_input(name, options); end
end

module BootstrapForm::Inputs::GroupedCollectionSelect
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::InputsCollection
  extend(::ActiveSupport::Concern)


  private

  def form_group_collection_input_checked?(checked, obj, input_value); end
  def form_group_collection_input_options(options, text, obj, index, input_value, collection); end
  def inputs_collection(name, collection, value, text, options = T.unsafe(nil)); end
end

module BootstrapForm::Inputs::MonthField
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::NumberField
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::PasswordField
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::PhoneField
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::RadioButton
  extend(::ActiveSupport::Concern)


  private

  def custom_radio_button_wrapper_class(options); end
  def radio_button_classes(name, options); end
  def radio_button_label(name, value, options); end
  def radio_button_label_class(options); end
  def radio_button_wrapper_class(options); end
  def standard_radio_button_wrapper_class(options); end
end

module BootstrapForm::Inputs::RangeField
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::RichTextArea
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::SearchField
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::Select
  extend(::ActiveSupport::Concern)

  include(::BootstrapForm::Inputs::Base)
end

module BootstrapForm::Inputs::TelephoneField
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::TextArea
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::TextField
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::TimeField
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::TimeSelect
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::TimeZoneSelect
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::UrlField
  extend(::ActiveSupport::Concern)
end

module BootstrapForm::Inputs::WeekField
  extend(::ActiveSupport::Concern)
end
