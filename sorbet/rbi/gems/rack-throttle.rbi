# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/rack-throttle/all/rack-throttle.rbi
#
# rack-throttle-0.7.0

module Rack
end
module Rack::Throttle
end
class Rack::Throttle::Limiter
  def allowed?(request); end
  def app; end
  def blacklisted?(request); end
  def cache; end
  def cache_get(key, default = nil); end
  def cache_has?(key); end
  def cache_key(request); end
  def cache_set(key, value); end
  def call(env); end
  def client_identifier(request); end
  def http_error(code, message = nil, headers = nil); end
  def http_status(code); end
  def initialize(app, options = nil); end
  def options; end
  def rate_limit_exceeded(request); end
  def request_start_time(request); end
  def whitelisted?(request); end
end
class Rack::Throttle::TimeWindow < Rack::Throttle::Limiter
  def allowed?(request); end
end
class Rack::Throttle::Daily < Rack::Throttle::TimeWindow
  def cache_key(request); end
  def initialize(app, options = nil); end
  def max_per_day(request = nil); end
  def max_per_window(request = nil); end
end
