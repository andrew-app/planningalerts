# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `formtastic` gem.
# Please instead update this file by running `bin/tapioca gem formtastic`.

# typed: true

module Formtastic
  extend ::ActiveSupport::Autoload
end

class Formtastic::ActionClassFinder < ::Formtastic::NamespacedClassFinder
  def initialize(builder); end

  def class_name(as); end
end

module Formtastic::Actions
  extend ::ActiveSupport::Autoload
end

module Formtastic::Actions::Base
  include ::Formtastic::LocalizedString

  def initialize(builder, template, object, object_name, method, options); end

  def accesskey; end
  def builder; end
  def builder=(_arg0); end
  def button_html; end
  def button_html_from_options; end
  def default_button_html; end
  def default_wrapper_classes; end
  def default_wrapper_html_options; end
  def default_wrapper_id; end
  def extra_button_html_options; end
  def method; end
  def method=(_arg0); end
  def object; end
  def object=(_arg0); end
  def object_name; end
  def object_name=(_arg0); end
  def options; end
  def options=(_arg0); end
  def supported_methods; end
  def template; end
  def template=(_arg0); end
  def text; end
  def to_html; end
  def wrapper(&block); end
  def wrapper_class; end
  def wrapper_classes_from_options; end
  def wrapper_html_options; end
  def wrapper_html_options_from_options; end
  def wrapper_id; end
  def wrapper_id_from_options; end

  protected

  def check_supported_methods!; end
  def i18n_key; end
  def new_or_persisted_object?; end
  def sanitized_object_name; end
  def submit_i18n_key; end
end

class Formtastic::Actions::ButtonAction
  include ::Formtastic::LocalizedString
  include ::Formtastic::Actions::Base
  include ::Formtastic::Actions::Buttonish

  def to_html; end
end

module Formtastic::Actions::Buttonish
  def extra_button_html_options; end
  def supported_methods; end
end

class Formtastic::Actions::InputAction
  include ::Formtastic::LocalizedString
  include ::Formtastic::Actions::Base
  include ::Formtastic::Actions::Buttonish

  def to_html; end
end

class Formtastic::Actions::LinkAction
  include ::Formtastic::LocalizedString
  include ::Formtastic::Actions::Base

  def supported_methods; end
  def to_html; end
  def url; end
end

Formtastic::Deprecation = ActiveSupport::Deprecation
class Formtastic::Engine < ::Rails::Engine; end

class Formtastic::FormBuilder < ::ActionView::Helpers::FormBuilder
  include ::Formtastic::HtmlAttributes
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Helpers::Enum
  include ::Formtastic::Helpers::FileColumnDetection
  include ::Formtastic::Helpers::InputHelper
  include ::Formtastic::Helpers::FieldsetWrapper
  include ::Formtastic::LocalizedString
  include ::Formtastic::Helpers::InputsHelper
  include ::Formtastic::Helpers::ActionHelper
  include ::Formtastic::Helpers::ActionsHelper
  include ::Formtastic::Helpers::ErrorsHelper

  def initialize(object_name, object, template, options); end

  def action_class_finder; end
  def action_class_finder=(_arg0); end
  def action_class_finder?; end
  def action_namespaces; end
  def action_namespaces=(_arg0); end
  def action_namespaces?; end
  def all_fields_required_by_default; end
  def all_fields_required_by_default=(_arg0); end
  def all_fields_required_by_default?; end
  def auto_index; end
  def collection_label_methods; end
  def collection_label_methods=(_arg0); end
  def collection_label_methods?; end
  def collection_value_methods; end
  def collection_value_methods=(_arg0); end
  def collection_value_methods?; end
  def custom_namespace; end
  def custom_namespace=(_arg0); end
  def custom_namespace?; end
  def default_commit_button_accesskey; end
  def default_commit_button_accesskey=(_arg0); end
  def default_commit_button_accesskey?; end
  def default_error_list_class; end
  def default_error_list_class=(_arg0); end
  def default_error_list_class?; end
  def default_hint_class; end
  def default_hint_class=(_arg0); end
  def default_hint_class?; end
  def default_inline_error_class; end
  def default_inline_error_class=(_arg0); end
  def default_inline_error_class?; end
  def default_text_area_height; end
  def default_text_area_height=(_arg0); end
  def default_text_area_height?; end
  def default_text_area_width; end
  def default_text_area_width=(_arg0); end
  def default_text_area_width?; end
  def default_text_field_size; end
  def default_text_field_size=(_arg0); end
  def default_text_field_size?; end
  def escape_html_entities_in_hints_and_labels; end
  def escape_html_entities_in_hints_and_labels=(_arg0); end
  def escape_html_entities_in_hints_and_labels?; end
  def file_metadata_suffixes; end
  def file_metadata_suffixes=(_arg0); end
  def file_metadata_suffixes?; end
  def file_methods; end
  def file_methods=(_arg0); end
  def file_methods?; end
  def i18n_cache_lookups; end
  def i18n_cache_lookups=(_arg0); end
  def i18n_cache_lookups?; end
  def i18n_localizer; end
  def i18n_localizer=(_arg0); end
  def i18n_localizer?; end
  def i18n_lookups_by_default; end
  def i18n_lookups_by_default=(_arg0); end
  def i18n_lookups_by_default?; end
  def include_blank_for_select_by_default; end
  def include_blank_for_select_by_default=(_arg0); end
  def include_blank_for_select_by_default?; end
  def inline_errors; end
  def inline_errors=(_arg0); end
  def inline_errors?; end
  def input_class_finder; end
  def input_class_finder=(_arg0); end
  def input_class_finder?; end
  def input_namespaces; end
  def input_namespaces=(_arg0); end
  def input_namespaces?; end
  def label_str_method; end
  def label_str_method=(_arg0); end
  def label_str_method?; end
  def optional_string; end
  def optional_string=(_arg0); end
  def optional_string?; end
  def perform_browser_validations; end
  def perform_browser_validations=(_arg0); end
  def perform_browser_validations?; end
  def priority_countries; end
  def priority_countries=(_arg0); end
  def priority_countries?; end
  def priority_time_zones; end
  def priority_time_zones=(_arg0); end
  def priority_time_zones?; end
  def required_string; end
  def required_string=(_arg0); end
  def required_string?; end
  def semantic_fields_for(record_or_name_or_array, *args, &block); end
  def skipped_columns; end
  def skipped_columns=(_arg0); end
  def skipped_columns?; end
  def template; end
  def use_required_attribute; end
  def use_required_attribute=(_arg0); end
  def use_required_attribute?; end

  class << self
    def action_class_finder; end
    def action_class_finder=(value); end
    def action_class_finder?; end
    def action_namespaces; end
    def action_namespaces=(value); end
    def action_namespaces?; end
    def all_fields_required_by_default; end
    def all_fields_required_by_default=(value); end
    def all_fields_required_by_default?; end
    def collection_label_methods; end
    def collection_label_methods=(value); end
    def collection_label_methods?; end
    def collection_value_methods; end
    def collection_value_methods=(value); end
    def collection_value_methods?; end
    def configure(name, default = T.unsafe(nil)); end
    def custom_namespace; end
    def custom_namespace=(value); end
    def custom_namespace?; end
    def default_commit_button_accesskey; end
    def default_commit_button_accesskey=(value); end
    def default_commit_button_accesskey?; end
    def default_error_list_class; end
    def default_error_list_class=(value); end
    def default_error_list_class?; end
    def default_hint_class; end
    def default_hint_class=(value); end
    def default_hint_class?; end
    def default_inline_error_class; end
    def default_inline_error_class=(value); end
    def default_inline_error_class?; end
    def default_text_area_height; end
    def default_text_area_height=(value); end
    def default_text_area_height?; end
    def default_text_area_width; end
    def default_text_area_width=(value); end
    def default_text_area_width?; end
    def default_text_field_size; end
    def default_text_field_size=(value); end
    def default_text_field_size?; end
    def escape_html_entities_in_hints_and_labels; end
    def escape_html_entities_in_hints_and_labels=(value); end
    def escape_html_entities_in_hints_and_labels?; end
    def file_metadata_suffixes; end
    def file_metadata_suffixes=(value); end
    def file_metadata_suffixes?; end
    def file_methods; end
    def file_methods=(value); end
    def file_methods?; end
    def i18n_cache_lookups; end
    def i18n_cache_lookups=(value); end
    def i18n_cache_lookups?; end
    def i18n_localizer; end
    def i18n_localizer=(value); end
    def i18n_localizer?; end
    def i18n_lookups_by_default; end
    def i18n_lookups_by_default=(value); end
    def i18n_lookups_by_default?; end
    def include_blank_for_select_by_default; end
    def include_blank_for_select_by_default=(value); end
    def include_blank_for_select_by_default?; end
    def inline_errors; end
    def inline_errors=(value); end
    def inline_errors?; end
    def input_class_finder; end
    def input_class_finder=(value); end
    def input_class_finder?; end
    def input_namespaces; end
    def input_namespaces=(value); end
    def input_namespaces?; end
    def label_str_method; end
    def label_str_method=(value); end
    def label_str_method?; end
    def optional_string; end
    def optional_string=(value); end
    def optional_string?; end
    def perform_browser_validations; end
    def perform_browser_validations=(value); end
    def perform_browser_validations?; end
    def priority_countries; end
    def priority_countries=(value); end
    def priority_countries?; end
    def priority_time_zones; end
    def priority_time_zones=(value); end
    def priority_time_zones?; end
    def required_string; end
    def required_string=(value); end
    def required_string?; end
    def skipped_columns; end
    def skipped_columns=(value); end
    def skipped_columns?; end
    def use_required_attribute; end
    def use_required_attribute=(value); end
    def use_required_attribute?; end
  end
end

module Formtastic::Helpers; end

module Formtastic::Helpers::ActionHelper
  def action(method, options = T.unsafe(nil)); end

  protected

  def default_action_type(method, options = T.unsafe(nil)); end
  def namespaced_action_class(as); end
end

module Formtastic::Helpers::ActionsHelper
  include ::Formtastic::Helpers::FieldsetWrapper

  def actions(*args, &block); end

  protected

  def default_actions; end
end

module Formtastic::Helpers::Enum
  def enum_for(method); end
end

module Formtastic::Helpers::ErrorsHelper
  include ::Formtastic::Helpers::FileColumnDetection
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::LocalizedString

  def semantic_errors(*args); end

  protected

  def error_keys(method, options); end
  def has_errors?(method, options); end
  def render_inline_errors?; end
end

Formtastic::Helpers::ErrorsHelper::INLINE_ERROR_TYPES = T.let(T.unsafe(nil), Array)

module Formtastic::Helpers::FieldsetWrapper
  protected

  def field_set_and_list_wrapping(*args, &block); end
  def field_set_legend(html_options); end
  def parent_child_index(parent); end
end

module Formtastic::Helpers::FileColumnDetection
  def is_file?(method, options = T.unsafe(nil)); end
end

module Formtastic::Helpers::FormHelper
  def builder; end
  def builder=(val); end
  def default_form_class; end
  def default_form_class=(val); end
  def default_form_model_class_proc; end
  def default_form_model_class_proc=(val); end
  def formtastic_field_error_proc; end
  def formtastic_field_error_proc=(val); end
  def semantic_fields_for(record_name, record_object = T.unsafe(nil), options = T.unsafe(nil), &block); end
  def semantic_form_for(record_or_name_or_array, *args, &proc); end

  protected

  def with_custom_field_error_proc(&block); end

  class << self
    def builder; end
    def builder=(val); end
    def default_form_class; end
    def default_form_class=(val); end
    def default_form_model_class_proc; end
    def default_form_model_class_proc=(val); end
    def formtastic_field_error_proc; end
    def formtastic_field_error_proc=(val); end
  end
end

module Formtastic::Helpers::InputHelper
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Helpers::Enum
  include ::Formtastic::Helpers::FileColumnDetection

  def input(method, options = T.unsafe(nil)); end

  protected

  def column_for(method); end
  def default_input_type(method, options = T.unsafe(nil)); end
  def namespaced_input_class(as); end
end

module Formtastic::Helpers::InputsHelper
  include ::Formtastic::Helpers::FieldsetWrapper
  include ::Formtastic::LocalizedString

  def inputs(*args, &block); end

  protected

  def association_columns(*by_associations); end
  def content_columns; end
  def default_columns_for_object; end
  def field_set_title_from_args(*args); end
  def fieldset_contents_from_column_list(columns); end
  def foreign_key_columns; end
  def inputs_for_nested_attributes(*args, &block); end
end

module Formtastic::Helpers::Reflection
  def association_macro_for_method(method); end
  def association_primary_key_for_method(method); end
  def reflection_for(method); end
end

module Formtastic::HtmlAttributes
  def dom_id_namespace; end

  protected

  def humanized_attribute_name(method); end
end

module Formtastic::I18n
  class << self
    def t(*args); end
    def translate(*args); end
  end
end

Formtastic::I18n::DEFAULT_SCOPE = T.let(T.unsafe(nil), Array)
Formtastic::I18n::DEFAULT_VALUES = T.let(T.unsafe(nil), Hash)
Formtastic::I18n::SCOPES = T.let(T.unsafe(nil), Array)

class Formtastic::InputClassFinder < ::Formtastic::NamespacedClassFinder
  def initialize(builder); end

  def class_name(as); end
end

module Formtastic::Inputs
  extend ::ActiveSupport::Autoload
end

module Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  extend ::ActiveSupport::Autoload

  def initialize(builder, template, object, object_name, method, options); end

  def builder; end
  def builder=(_arg0); end
  def method; end
  def method=(_arg0); end
  def object; end
  def object=(_arg0); end
  def object_name; end
  def object_name=(_arg0); end
  def options; end
  def options=(_arg0); end
  def removed_option!(old_option_name); end
  def template; end
  def template=(_arg0); end
  def warn_and_correct_option!(old_option_name, new_option_name); end
  def warn_deprecated_option!(old_option_name, instructions); end
end

module Formtastic::Inputs::Base::Associations
  include ::Formtastic::Helpers::Reflection

  def association; end
  def association_primary_key; end
  def belongs_to?; end
  def has_many?; end
  def reflection; end
end

module Formtastic::Inputs::Base::Choices
  def choice_html(choice); end
  def choice_html_options(choice); end
  def choice_html_safe_value(choice); end
  def choice_input_dom_id(choice); end
  def choice_label(choice); end
  def choice_value(choice); end
  def choice_wrapping(html_options, &block); end
  def choice_wrapping_html_options(choice); end
  def choices_group_wrapping(&block); end
  def choices_group_wrapping_html_options; end
  def choices_wrapping(&block); end
  def choices_wrapping_html_options; end
  def custom_choice_html_options(choice); end
  def default_choice_html_options(choice); end
  def label_html_options; end
  def legend_html; end
  def value_as_class?; end
end

module Formtastic::Inputs::Base::Collections
  def collection; end
  def collection_for_boolean; end
  def collection_from_association; end
  def collection_from_enum; end
  def collection_from_enum?; end
  def collection_from_options; end
  def label_and_value_method; end
  def label_and_value_method_from_collection(_collection); end
  def label_method; end
  def label_method_from_options; end
  def raw_collection; end
  def send_or_call(duck, object); end
  def send_or_call_or_object(duck, object); end
  def value_method; end
  def value_method_from_options; end
end

module Formtastic::Inputs::Base::Database
  def column; end
  def column?; end
end

module Formtastic::Inputs::Base::DatetimePickerish
  include ::Formtastic::Inputs::Base::Placeholder

  def default_maxlength; end
  def default_size; end
  def default_step; end
  def extra_input_html_options; end
  def html_input_type; end
  def input_html_options; end
  def maxlength; end
  def size; end
  def step; end
  def value; end

  protected

  def step_from_macro(sym); end
end

module Formtastic::Inputs::Base::Errors
  def error_first_html; end
  def error_html; end
  def error_keys; end
  def error_list_html; end
  def error_none_html; end
  def error_sentence_html; end
  def errors; end
  def errors?; end
end

module Formtastic::Inputs::Base::Fileish
  def file?; end
end

module Formtastic::Inputs::Base::Hints
  def hint?; end
  def hint_html; end
  def hint_text; end
  def hint_text_from_options; end
end

module Formtastic::Inputs::Base::Html
  def dom_id; end
  def dom_index; end
  def input_html_options; end
  def to_html; end
end

module Formtastic::Inputs::Base::Labelling
  include ::Formtastic::LocalizedString

  def label_from_options; end
  def label_html; end
  def label_html_options; end
  def label_text; end
  def localized_label; end
  def render_label?; end
  def requirement_text; end
  def requirement_text_or_proc; end
end

module Formtastic::Inputs::Base::Naming
  def as; end
  def attributized_method_name; end
  def humanized_method_name; end
  def input_name; end
  def sanitized_method_name; end
  def sanitized_object_name; end
end

module Formtastic::Inputs::Base::Numeric
  def in_option; end
  def input_html_options; end
  def max_option; end
  def min_option; end
  def step_option; end
  def wrapper_html_options; end
end

module Formtastic::Inputs::Base::Options
  def formtastic_options; end
  def input_options; end
end

module Formtastic::Inputs::Base::Placeholder
  def input_html_options; end
  def placeholder_text; end
end

module Formtastic::Inputs::Base::Stringish
  def input_html_options; end
  def maxlength; end
  def size; end
  def to_html; end
  def wrapper_html_options; end
end

module Formtastic::Inputs::Base::Timeish
  def date_fragments; end
  def default_date_fragments; end
  def fragment_id(fragment); end
  def fragment_input_html(fragment); end
  def fragment_label(fragment); end
  def fragment_label_html(fragment); end
  def fragment_name(fragment); end
  def fragment_prefix; end
  def fragment_wrapping(&block); end
  def fragment_wrapping_html_options; end
  def fragments; end
  def fragments_inner_wrapping(&block); end
  def fragments_label; end
  def fragments_wrapping(&block); end
  def fragments_wrapping_html_options; end
  def hidden_field_name(fragment); end
  def hidden_fragments; end
  def i18n_date_fragments; end
  def include_blank?; end
  def position(fragment); end
  def positions; end
  def time_fragments; end
  def to_html; end
  def value; end
end

module Formtastic::Inputs::Base::Validations
  def autofocus?; end
  def column_limit; end
  def limit; end
  def not_required_through_negated_validation!; end
  def not_required_through_negated_validation?; end
  def optional?; end
  def readonly?; end
  def readonly_attribute?; end
  def readonly_from_options?; end
  def required?; end
  def required_attribute?; end
  def responds_to_global_required?; end
  def validation_integer_only?; end
  def validation_limit; end
  def validation_max; end
  def validation_min; end
  def validation_step; end
  def validations; end
  def validations?; end
  def validator_relevant?(validator); end

  private

  def option_value(option, object); end
end

class Formtastic::Inputs::Base::Validations::IndeterminableMaximumAttributeError < ::ArgumentError
  def message; end
end

class Formtastic::Inputs::Base::Validations::IndeterminableMinimumAttributeError < ::ArgumentError
  def message; end
end

module Formtastic::Inputs::Base::Wrapping
  def input_wrapping(&block); end
  def wrapper_classes; end
  def wrapper_classes_raw; end
  def wrapper_dom_id; end
  def wrapper_html_options; end
  def wrapper_html_options_raw; end
end

class Formtastic::Inputs::BooleanInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base

  def check_box_html; end
  def checked?; end
  def checked_value; end
  def hidden_field_html; end
  def input_html_options; end
  def input_html_options_name; end
  def label_html_options; end
  def label_text_with_embedded_checkbox; end
  def label_with_nested_checkbox; end
  def responds_to_global_required?; end
  def to_html; end
  def unchecked_value; end

  private

  def boolean_checked?(value, checked_value); end
end

class Formtastic::Inputs::CheckBoxesInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Collections
  include ::Formtastic::Inputs::Base::Choices

  def initialize(*args); end

  def check_box_with_hidden_input(choice); end
  def check_box_without_hidden_input(choice); end
  def checked?(value); end
  def choice_html(choice); end
  def disabled?(value); end
  def disabled_values; end
  def extra_html_options(choice); end
  def hidden_field_for_all; end
  def hidden_fields_for_every?; end
  def input_name; end
  def selected_values; end
  def to_html; end
  def unchecked_value; end

  protected

  def checkbox_input(choice); end
  def make_selected_values; end
end

class Formtastic::Inputs::ColorInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Stringish
  include ::Formtastic::Inputs::Base::Placeholder

  def to_html; end
end

class Formtastic::Inputs::CountryInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base

  def priority_countries; end
  def to_html; end
end

class Formtastic::Inputs::CountryInput::CountrySelectPluginMissing < ::StandardError; end

class Formtastic::Inputs::DatalistInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Stringish
  include ::Formtastic::Inputs::Base::Collections

  def data_list_html; end
  def html_id_of_datalist; end
  def input_html_options; end
  def to_html; end
end

class Formtastic::Inputs::DatePickerInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Stringish
  include ::Formtastic::Inputs::Base::Placeholder
  include ::Formtastic::Inputs::Base::DatetimePickerish

  def default_size; end
  def html_input_type; end
  def value; end
end

class Formtastic::Inputs::DateSelectInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Timeish

  def fragment_value(fragment); end
  def hidden_date_fragments; end
  def hidden_fragments; end
  def time_fragments; end
end

class Formtastic::Inputs::DatetimePickerInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Stringish
  include ::Formtastic::Inputs::Base::Placeholder
  include ::Formtastic::Inputs::Base::DatetimePickerish

  def default_size; end
  def html_input_type; end
  def value; end
end

class Formtastic::Inputs::DatetimeSelectInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Timeish
end

class Formtastic::Inputs::EmailInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Stringish
  include ::Formtastic::Inputs::Base::Placeholder

  def to_html; end
end

class Formtastic::Inputs::FileInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base

  def to_html; end
end

class Formtastic::Inputs::HiddenInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base

  def error_html; end
  def errors?; end
  def hint?; end
  def hint_html; end
  def input_html_options; end
  def to_html; end
end

class Formtastic::Inputs::NumberInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Numeric
  include ::Formtastic::Inputs::Base::Placeholder

  def step_option; end
  def to_html; end
end

class Formtastic::Inputs::PasswordInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Stringish
  include ::Formtastic::Inputs::Base::Placeholder

  def to_html; end
end

class Formtastic::Inputs::PhoneInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Stringish
  include ::Formtastic::Inputs::Base::Placeholder

  def to_html; end
end

class Formtastic::Inputs::RadioInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Collections
  include ::Formtastic::Inputs::Base::Choices

  def choice_html(choice); end
  def label_html_options; end
  def to_html; end
end

class Formtastic::Inputs::RangeInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Numeric

  def max_option; end
  def min_option; end
  def step_option; end
  def to_html; end
end

class Formtastic::Inputs::SearchInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Stringish
  include ::Formtastic::Inputs::Base::Placeholder

  def to_html; end
end

class Formtastic::Inputs::SelectInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Collections

  def initialize(*args); end

  def extra_input_html_options; end
  def include_blank; end
  def input_html_options; end
  def input_html_options_name; end
  def input_html_options_name_multiple; end
  def input_options; end
  def label_html_options; end
  def multiple?; end
  def multiple_by_association?; end
  def multiple_by_options?; end
  def prompt?; end
  def select_html; end
  def single?; end
  def to_html; end
end

class Formtastic::Inputs::StringInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Stringish
  include ::Formtastic::Inputs::Base::Placeholder
end

class Formtastic::Inputs::TextInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Placeholder

  def input_html_options; end
  def to_html; end
end

class Formtastic::Inputs::TimePickerInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Stringish
  include ::Formtastic::Inputs::Base::Placeholder
  include ::Formtastic::Inputs::Base::DatetimePickerish

  def default_size; end
  def default_step; end
  def html_input_type; end
  def value; end
end

class Formtastic::Inputs::TimeSelectInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Timeish

  def fragment_value(fragment); end
  def fragments; end
  def hidden_fragments; end
  def value_or_default_value; end
end

class Formtastic::Inputs::TimeZoneInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base

  def priority_zones; end
  def to_html; end
end

class Formtastic::Inputs::UrlInput
  include ::Formtastic::Inputs::Base::Html
  include ::Formtastic::Inputs::Base::Options
  include ::Formtastic::Inputs::Base::Database
  include ::Formtastic::Inputs::Base::Errors
  include ::Formtastic::Inputs::Base::Hints
  include ::Formtastic::Inputs::Base::Naming
  include ::Formtastic::Inputs::Base::Validations
  include ::Formtastic::Inputs::Base::Fileish
  include ::Formtastic::Helpers::Reflection
  include ::Formtastic::Inputs::Base::Associations
  include ::Formtastic::LocalizedString
  include ::Formtastic::Inputs::Base::Labelling
  include ::Formtastic::Inputs::Base::Wrapping
  include ::Formtastic::Inputs::Base
  include ::Formtastic::Inputs::Base::Stringish
  include ::Formtastic::Inputs::Base::Placeholder

  def to_html; end
end

module Formtastic::LocalizedString
  def model_name; end

  protected

  def localized_string(key, value, type, options = T.unsafe(nil)); end
end

class Formtastic::Localizer
  def initialize(current_builder); end

  def builder; end
  def builder=(_arg0); end
  def localize(key, value, type, options = T.unsafe(nil)); end

  protected

  def escape_html_entities(string); end
  def i18n_cache_lookups; end
  def i18n_lookups_by_default; end
  def normalize_model_name(name); end

  class << self
    def cache; end
  end
end

class Formtastic::Localizer::Cache
  def cache; end
  def clear!; end
  def get(key); end
  def has_key?(key); end
  def set(key, result); end
end

class Formtastic::NamespacedClassFinder
  def initialize(namespaces); end

  def class_name(as); end
  def find(as); end
  def namespaces; end
  def resolve(as); end

  private

  def find_by_trying(class_name); end
  def find_with_const_defined(class_name); end
  def finder(class_name); end

  class << self
    def use_const_defined?; end
  end
end

class Formtastic::NamespacedClassFinder::NotFoundError < ::NameError; end
class Formtastic::PolymorphicInputWithoutCollectionError < ::ArgumentError; end
class Formtastic::UnknownActionError < ::NameError; end
class Formtastic::UnknownInputError < ::NameError; end
class Formtastic::UnsupportedEnumCollection < ::NameError; end
class Formtastic::UnsupportedMethodForAction < ::ArgumentError; end
